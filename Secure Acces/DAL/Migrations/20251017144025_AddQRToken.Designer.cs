// <auto-generated />
using System;
using DAL.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251017144025_AddQRToken")]
    partial class AddQRToken
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.Models.AccessMethod", b =>
                {
                    b.Property<int>("AccessMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccessMethodId"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccessMethodId");

                    b.ToTable("AccessMethods");
                });

            modelBuilder.Entity("DAL.Models.AuditLog", b =>
                {
                    b.Property<int>("AuditLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditLogId"));

                    b.Property<int?>("AccessMethodId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<double?>("DoorNumber")
                        .HasColumnType("float");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.HasKey("AuditLogId");

                    b.HasIndex("AccessMethodId");

                    b.HasIndex("LocationId");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("DAL.Models.Door", b =>
                {
                    b.Property<int>("DoorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoorId"));

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<double?>("Number")
                        .HasColumnType("float");

                    b.HasKey("DoorId");

                    b.HasIndex("LocationId");

                    b.ToTable("Doors");
                });

            modelBuilder.Entity("DAL.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("LocationId");

                    b.HasIndex("RoleId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("DAL.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"));

                    b.Property<string>("Coordinates")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("DAL.Models.QRToken", b =>
                {
                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Scanned")
                        .HasColumnType("bit");

                    b.HasKey("Token");

                    b.ToTable("QRTokens");
                });

            modelBuilder.Entity("DAL.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("DAL.Models.AuditLog", b =>
                {
                    b.HasOne("DAL.Models.AccessMethod", "AccessMethod")
                        .WithMany("AuditLogs")
                        .HasForeignKey("AccessMethodId");

                    b.HasOne("DAL.Models.Location", "Location")
                        .WithMany("AuditLogs")
                        .HasForeignKey("LocationId");

                    b.Navigation("AccessMethod");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("DAL.Models.Door", b =>
                {
                    b.HasOne("DAL.Models.Location", "Location")
                        .WithMany("Doors")
                        .HasForeignKey("LocationId");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("DAL.Models.Employee", b =>
                {
                    b.HasOne("DAL.Models.Location", "Location")
                        .WithMany("Employees")
                        .HasForeignKey("LocationId");

                    b.HasOne("DAL.Models.Role", "Role")
                        .WithMany("Employees")
                        .HasForeignKey("RoleId");

                    b.Navigation("Location");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DAL.Models.AccessMethod", b =>
                {
                    b.Navigation("AuditLogs");
                });

            modelBuilder.Entity("DAL.Models.Location", b =>
                {
                    b.Navigation("AuditLogs");

                    b.Navigation("Doors");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("DAL.Models.Role", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
